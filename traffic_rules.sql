DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS ANSWER_POOL;
DROP TABLE IF EXISTS ANSWER;
DROP TABLE IF EXISTS QUESTION_CATEGORY;
DROP TABLE IF EXISTS QUESTION;
DROP TABLE IF EXISTS TEST;
DROP TABLE IF EXISTS TEST_SECTION;
DROP TABLE IF EXISTS TEST_SECTION_QUESTION_XREF;
DROP TABLE IF EXISTS TEST_RESULT;
DROP TABLE IF EXISTS TEST_RESULT_ANSWERS_FACTS;

CREATE TABLE ROLE (
  ID INTEGER PRIMARY KEY NOT NULL,
  DESCRIPTION TEXT NOT NULL
);

CREATE TABLE USER (
  ID INTEGER PRIMARY KEY NOT NULL,
  FIRST_NAME TEXT NOT NULL,
  LAST_NAME TEXT NOT NULL,
  IMAGE_URL TEXT,
  ROLE_ID INTEGER NOT NULL,
  PASSWORD TEXT,
  FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ID)
);

/*
 * Category of the question. Usually but not necessarily there will be 1 to 1 relationship between this category and a question
 */
CREATE TABLE ANSWER_POOL (
  ID INTEGER PRIMARY KEY     NOT NULL,
  DESCRIPTION        TEXT    NOT NULL
);

CREATE TABLE ANSWER (
  ID INTEGER PRIMARY KEY     NOT NULL,
  DESCRIPTION        TEXT    NOT NULL,
  ANSWER_POOL_ID           INTEGER    NOT NULL,
  FOREIGN KEY(ANSWER_POOL_ID) REFERENCES ANSWER_POOL(ID)
);

CREATE TABLE QUESTION_CATEGORY (
  ID INTEGER PRIMARY KEY     NOT NULL,
  DESCRIPTION        TEXT    NOT NULL
);

CREATE TABLE QUESTION (
  ID INTEGER PRIMARY KEY        NOT NULL,
  DESCRIPTION        TEXT       NOT NULL,
  IMAGE_URL TEXT,
  QUESTION_CATEGORY_ID        INTEGER    NOT NULL,
  ANSWER_POOL_ID     INTEGER    NOT NULL,
  CORRECT_ANSWER_ID  INTEGER    NOT NULL,
  FOREIGN KEY(QUESTION_CATEGORY_ID) REFERENCES QUESTION_CATEGORY(ID),
  FOREIGN KEY(ANSWER_POOL_ID) REFERENCES ANSWER_POOL(ID),
  FOREIGN KEY(CORRECT_ANSWER_ID) REFERENCES ANSWER(ID)
);



/**
 * Every Test has Text sections which contain a list of questions
 */
CREATE TABLE TEST (
  ID INTEGER PRIMARY KEY NOT NULL,
  DESCRIPTION        TEXT    NOT NULL,
  TEACHER_ID INTEGER NOT NULL,
  FOREIGN KEY(TEACHER_ID) REFERENCES USER(ID)
);

CREATE TABLE TEST_SECTION (
  ID INTEGER PRIMARY KEY NOT NULL,
  DESCRIPTION        TEXT    NOT NULL,
  TEST_ID            INTEGER NOT NULL,
  FOREIGN KEY(TEST_ID) REFERENCES TEST(ID)
);

/**
 * We can have the same question in several sections, therefore we need a many to many xref table between test sections and questions
 */
CREATE TABLE TEST_SECTION_QUESTION_XREF (
  TEST_SECTION_ID INTEGER NOT NULL,
  QUESTION_ID INTEGER NOT NULL,
  FOREIGN KEY (TEST_SECTION_ID) REFERENCES TEST_SECTION(ID),
  FOREIGN KEY (QUESTION_ID) REFERENCES  QUESTION(ID)
);

/**
  Aggregated statistics, for analytics purposes. This data can be also computed dynamically from other tables,
  but it is easier if we store it and update it so that we don't have to compute it every time
  Test results are user specific
  One test_result per user per test.
 */
CREATE TABLE TEST_RESULT (
  ID INTEGER PRIMARY KEY NOT NULL,
  STUDENT_ID INTEGER NOT NULL,
  TEST_ID INTEGER NOT NULL,
  DATETIME_START INTEGER NOT NULL,
  DATETIME_END INTEGER NOT NULL,
  IS_COMPLETED INTEGER NOT NULL,

  QUESTIONS_TOTAL INTEGER,
  QUESTIONS_ANSWERED INTEGER,
  QUESTIONS_CORRECT INTEGER,

  FOREIGN KEY(STUDENT_ID) REFERENCES USER(ID),
  FOREIGN KEY(TEST_ID) REFERENCES TEST(ID)
);

/* Table in which we keep the answer of every question for every test */
CREATE TABLE TEST_RESULT_ANSWERS_FACTS (
  TEST_ID INTEGER NOT NULL ,
  STUDENT_ID INTEGER NOT NULL,
  QUESTION_ID INTEGER NOT NULL,
  ANSWER_ID INTEGER NOT NULL,
  IS_CORRECT INTEGER NOT NULL,
  DATETIME TEXT NOT NULL,
  PRIMARY KEY (TEST_ID, STUDENT_ID, QUESTION_ID),
  FOREIGN KEY (TEST_ID) REFERENCES TEST(ID),
  FOREIGN KEY (STUDENT_ID) REFERENCES USER(ID),
  FOREIGN KEY(QUESTION_ID) REFERENCES QUESTION(ID),
  FOREIGN KEY(ANSWER_ID) REFERENCES ANSWER(ID)
);


INSERT INTO ROLE (ID, DESCRIPTION) VALUES (1, "Admin");
INSERT INTO ROLE (ID, DESCRIPTION) VALUES (2, "Teacher");
INSERT INTO ROLE (ID, DESCRIPTION) VALUES (3, "Student");

INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (1, "Andrey", "Petrov", "http://lh3.googleusercontent.com/-bjgJUDNlFhM/AAAAAAAAAAI/AAAAAAAAAAA/AKB_U8vGzayOkjkrL9TY_lHaJMz0HRBvjQ/s64-c-mo/photo.jpg", 1, "parola");
INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (2, "Aleksandar", "Petrov", "http://orig04.deviantart.net/b250/f/2009/330/e/8/smiley_face_avatar_by_pixeltwist.gif", 1, "parola");
INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (3, "Учителко", "Учителков", NULL, 2, "parola");
INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (4, "Йордан", "Илиев", NULL, 3, "parola");
INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (5, "Теодор", "Стаматов", NULL, 3, NULL );


INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (1, "Обща");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (2, "Веригата на велосипеда 1");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (3, "Веригата на велосипеда 2");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (4, "Буташ велосипед");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (5, "Няма тротоар или банкет. Велосипед");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (6, "Няма тротоар или банкет. Велосипед");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (7, "Няма тротоар или банкет. Велосипед");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (8, "Няма тротоар или банкет. Велосипед");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (9, "ДА или НЕ");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (10, "ДА или НЕ");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (11, "ДА или НЕ");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (12, "ДА или НЕ");
INSERT INTO ANSWER_POOL (ID, DESCRIPTION) VALUES (13, "ДА или НЕ");



INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (1, "Кръстовище");
INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (2, "Велосипед");
INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (3, "Пътни знаци");


INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (1, "Какво означава този знак?", "sign_A25.png", 3, 1, 1);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (2, "Какво означава този знак?", "sign_A26.png", 3, 1, 3);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (3, "Какво означава този знак?", "sign_A27.png", 3, 1, 5);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (4, "Какво означава този знак?", "sign_A28.png", 3, 1, 13);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (5, "Какво означава този знак?", "sign_A29.png", 3, 5, 17);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (6, "Какво означава този знак?", "sign_B1.png", 3, 6, 21);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (7, "Какво означава този знак?", "sign_B2.png", 3, 7, 25);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (8, "Какво означава този знак?", "sign_B3.png", 3, 8, 29);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (9, "Какво означава този знак?", "sign_B4.png", 3, 9, 33);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (10, "Този сигнал на регулировчика означава?", "cop_S1.png", 1, 10, 37);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (11, "Забранява ли регулировчика на пешеходците и водачите да минават през кръстовището?", "cop_S1.png", 1, 11, 41);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (12, "Дясната ръка на регулировчика, протегната хоризонтално напред, разрешава ли на пешеходците да преминават зад гърба му?", "cop_S2.png", 1, 12, 43);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (13, "Този сигнал на регулировчика означава:", "cop_S3.png", 1, 13, 45);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (14, "Този сигнал на регулировчика отговаря на следния сигнал на светофара:", "cop_S1.png", 1, 14, 48);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (15, "Този сигнал на регулировчика отговаря на следния сигнал на светофара:", "cop_S3.png", 1, 15, 51);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (16, "Лява ръка, изпъната хоризонтално встрани се подава при?", NULL, 2, 16, 54);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (17, "Дясна ръка, изпъната хоризонтално встрани се подава при?", NULL, 2, 17, 57);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (18, "Как ще направиш ляв завой на оживено кръстовище?", NULL, 2, 18, 60);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (19, "Може ли да влияе на равновесието и на безопасното управление на велосипеда една ненапомпена гума?", NULL, 2, 19, 63);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (20, "Може ли да влияе на равновесието и на безопасното управление на велосипеда нерегулирани добре седалка и кормило?", NULL, 2, 20, 65);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (21, "Може ли да влияе на равновесието и на безопасното управление на велосипеда един голям товар на багажника?", NULL, 2, 21, 67);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (22, "Когато буташ велосипед, тогава, според ЗДвП, ти си?", NULL, 2, 22, 69);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (23, "Когато няма тротоар или банкет, или те не могат да бъдат използвани, тогава къде ще буташ велосипеда си?", NULL, 2, 23, 71);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (24, "Веригата на велосипеда:", NULL, 2, 24, 73);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (25, "Веригата на велосипеда:", NULL, 2, 25, 76);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (26, "Има ли части на велосипеда, които се смазват с масло?", NULL, 2, 26, 78);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (27, "Има ли части на велосипеда, които се смазват с грес?", NULL, 2, 27, 80);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (28, "Равномерното действие на крачната спирачка зависи ли от правилното опъване на веригата?", NULL, 2, 28, 82);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (29, "Равномерното действие на ръчните спирачки зависи ли от центровката на колелата?", NULL, 2, 29, 84);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (30, "Какво означава този знак?", "sign_V1.png", 3, 30, 86);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (31, "Какво означава този знак?", "sign_V2.png", 3, 31, 90);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (32, "Има ли право велосипедистът да управлява, без да държи кормилото с ръце, както и да освобождава педалите?", NULL, 2, 32, 93);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (33, "Има ли право велосипедистът да се учи да кара по платното за движение?", NULL, 2, 33, 95);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (34, "Има ли право велосипедистът да се движи на повече от 1м. от края на платното?", NULL, 2, 34, 97);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (35, "Има ли право велосипедистът да се движи близо до ППС или да се държи за него?", NULL, 2, 35, 99);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (36, "Има ли право велосипедистът да превозва дете до 7-годишна възраст без допълнителна седалка?", NULL, 2, 36, 101);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (37, "Има ли право велосипедистът да превозва товар, който излиза на повече от половин метър от габаритите на велосипеда?", NULL, 2, 37, 103);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (38, "Има ли право велосипедистът да превозва товар, който излиза на повече от половин метър от габаритите на велосипеда?", NULL, 2, 38, 105);
INSERT INTO QUESTION (ID, DESCRIPTION, IMAGE_URL, QUESTION_CATEGORY_ID, ANSWER_POOL_ID, CORRECT_ANSWER_ID) VALUES (39, "Има ли право велосипедистът да се движи в група за тренировки или поход без придружително МПС?", NULL, 2, 39, 107);



INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (1, "Кръстовище на равнозначни пътища", 1);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (2, "Кръстовище с кръгово движение", 1);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (3, "Кръстовище с път без предимство", 1);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (4, "Кръстовище с път без предимство отляво", 1);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (5, "Кръстовище с път без предимство отдясно", 1);


INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (21, "Пропусни движещите се по пътя с предимство", 6);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (23, "Път с предимство", 6);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (24, "Край на пътя с предимство", 6);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (25, "Спри! Пропусни движещите се по пътя с предимство", 7);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (31, "Стоп", 8);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (36, "Кръстовище на равнозначни пътища", 9);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (37, "Внимание! Спри!", 10);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (38, "Преминаването е разрешено", 10);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (39, "Преминаването отдясно е забранено", 10);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (40, "Преминаването отдясно е разрешено", 10);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (41, "Да", 11);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (42, "Не", 11);



INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (45, "Преминаването е разрешено", 13);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (46, "Внимание! Спри!", 13);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (47, "Преминаването е забранено", 13);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (48, "Червен", 14);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (49, "Жълт", 14);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (50, "Зелен", 14);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (57, "Завиване надясно", 17);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (58, "Завиване наляво", 17);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (59, "Спиране", 17);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (60, "Ще сляза от велосипеда, ще се кача на тротоара и ще пресека по пешеходните пътеки, като го бутам", 18);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (61, "Ще го направя качен на велосипед", 18);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (62, "Ще сляза от велосипеда и ще го бутам по платното", 18);


INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (69, "Пешеходец", 22);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (70, "Велосипедист", 22);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (71, "По платното за движение, най-близо до дясната му граница", 23);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (72, "По платното за движение, най-близо до лявата му граница", 23);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (73, "Трябва да се обтяга периодично", 24);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (74, "Трябва да се отпуспа периодично", 24);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (75, "Нито се обтяга, нито се отпуска", 24);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (76, "Се смазва периодично", 25);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (77, "Не се смазва", 25);

INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (86, "Забранено е влизането на ППС", 30);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (87, "Забранено е влизането на ППС в двете посоки", 30);
INSERT INTO ANSWER (ID, DESCRIPTION, ANSWER_POOL_ID) VALUES (89, "Позволено е влизането на ППС", 30);


INSERT INTO TEST (ID, DESCRIPTION, TEACHER_ID) VALUES  (1, "Тест за движение по пътищата", 3);

INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (1, "Първа секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (2, "Втора секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (3, "Трета секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (4, "Четвърта секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (5, "Пета секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (6, "Шеста секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (7, "Седма секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (8, "Осма секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (9, "Девета секция", 1);


INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 1);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 2);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 3);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 4);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 5);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 6);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 7);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 8);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 9);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 10);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 11);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 12);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 13);

INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (2, 14);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (2, 15);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (2, 16);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (2, 17);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (2, 18);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (2, 19);


INSERT INTO TEST_RESULT_ANSWERS_FACTS (TEST_ID, STUDENT_ID, QUESTION_ID, ANSWER_ID, IS_CORRECT, DATETIME) VALUES (1, 4, 1, 2, 1, DateTime('now'));
INSERT INTO TEST_RESULT_ANSWERS_FACTS (TEST_ID, STUDENT_ID, QUESTION_ID, ANSWER_ID, IS_CORRECT, DATETIME) VALUES (1, 4, 2, 5, 1, DateTime('now'));
INSERT INTO TEST_RESULT_ANSWERS_FACTS (TEST_ID, STUDENT_ID, QUESTION_ID, ANSWER_ID, IS_CORRECT, DATETIME) VALUES (1, 4, 3, 5, 0, DateTime('now'));
INSERT INTO TEST_RESULT_ANSWERS_FACTS (TEST_ID, STUDENT_ID, QUESTION_ID, ANSWER_ID, IS_CORRECT, DATETIME) VALUES (1, 4, 4, 5, 0, DateTime('now'));
INSERT INTO TEST_RESULT_ANSWERS_FACTS (TEST_ID, STUDENT_ID, QUESTION_ID, ANSWER_ID, IS_CORRECT, DATETIME) VALUES (1, 4, 5, 5, 0, DateTime('now'));
INSERT INTO TEST_RESULT_ANSWERS_FACTS (TEST_ID, STUDENT_ID, QUESTION_ID, ANSWER_ID, IS_CORRECT, DATETIME) VALUES (1, 4, 6, 5, 0, DateTime('now'));
INSERT INTO TEST_RESULT_ANSWERS_FACTS (TEST_ID, STUDENT_ID, QUESTION_ID, ANSWER_ID, IS_CORRECT, DATETIME) VALUES (1, 4, 7, 5, 0, DateTime('now','start of month','+1 month','-1 day'));














/**SELECTS**/

/* All tests */
SELECT t.*,
  ts.id TEST_SECTION_ID,
  ts.description TEST_SECTION_DESCRIPTION,
  q.id QUESTION_ID,
  q.description QUESTION_DESCRIPTION,
  q.correct_answer_id QUESTION_CORRECT_ANSWER_ID,
  q.IMAGE_URL QUESTION_IMAGE_URL,
  a.id ANSWER_ID,
  a.description ANSWER_DESCRIPTION,
  qc.description QUESTION_CATEGORY_DESCRIPTION
FROM TEST t
  LEFT JOIN TEST_SECTION ts
    ON t.ID = ts.TEST_ID
  LEFT JOIN TEST_SECTION_QUESTION_XREF tsqx
    ON ts.ID = tsqx.TEST_SECTION_ID
  LEFT JOIN QUESTION q
    ON tsqx.QUESTION_ID = q.ID
  LEFT JOIN ANSWER_POOL ap
    ON ap.ID = q.ANSWER_POOL_ID
  LEFT JOIN ANSWER a
    ON ap.ID = a.ANSWER_POOL_ID
  LEFT JOIN QUESTION_CATEGORY qc
    ON q.QUESTION_CATEGORY_ID = qc.ID
ORDER BY t.ID, TEST_SECTION_ID, q.id, a.id;


/* Test with answers for one user */
SELECT t.*,
  ts.id TEST_SECTION_ID,
  ts.description TEST_SECTION_DESCRIPTION,
  q.id QUESTION_ID,
  q.description QUESTION_DESCRIPTION,
  q.correct_answer_id QUESTION_CORRECT_ANSWER_ID,
  q.IMAGE_URL QUESTION_IMAGE_URL,
  a.id ANSWER_ID,
  a.description ANSWER_DESCRIPTION,
  qc.description QUESTION_CATEGORY_DESCRIPTION,
  traf.ANSWER_ID GIVEN_ANSWER,
  traf.IS_CORRECT
FROM TEST t
  LEFT JOIN TEST_SECTION ts
    ON t.ID = ts.TEST_ID
  LEFT JOIN TEST_SECTION_QUESTION_XREF tsqx
    ON ts.ID = tsqx.TEST_SECTION_ID
  LEFT JOIN QUESTION q
    ON tsqx.QUESTION_ID = q.ID
  LEFT JOIN ANSWER_POOL ap
    ON ap.ID = q.ANSWER_POOL_ID
  LEFT JOIN ANSWER a
    ON ap.ID = a.ANSWER_POOL_ID
  LEFT JOIN QUESTION_CATEGORY qc
    ON q.QUESTION_CATEGORY_ID = qc.ID
  LEFT JOIN TEST_RESULT_ANSWERS_FACTS traf
    ON t.ID = traf.TEST_ID AND q.id = traf.QUESTION_ID AND traf.STUDENT_ID = 4
WHERE t.ID = 2
ORDER BY t.ID, TEST_SECTION_ID, q.id, a.id;




SELECT t.*,
  ts.id TEST_SECTION_ID,
  ts.description TEST_SECTION_DESCRIPTION,
  q.id QUESTION_ID,
  q.description QUESTION_DESCRIPTION,
  q.correct_answer_id QUESTION_CORRECT_ANSWER_ID,
  q.IMAGE_URL QUESTION_IMAGE_URL,
  a.id ANSWER_ID,
  a.description ANSWER_DESCRIPTION,
  qc.description QUESTION_CATEGORY_DESCRIPTION,
  traf.ANSWER_ID GIVEN_ANSWER,
  traf.IS_CORRECT
FROM TEST t
  LEFT JOIN TEST_SECTION ts
    ON t.ID = ts.TEST_ID
  LEFT JOIN TEST_SECTION_QUESTION_XREF tsqx
    ON ts.ID = tsqx.TEST_SECTION_ID
  LEFT JOIN QUESTION q
    ON tsqx.QUESTION_ID = q.ID
  LEFT JOIN ANSWER_POOL ap
    ON ap.ID = q.ANSWER_POOL_ID
  LEFT JOIN ANSWER a
    ON ap.ID = a.ANSWER_POOL_ID
  LEFT JOIN QUESTION_CATEGORY qc
    ON q.QUESTION_CATEGORY_ID = qc.ID
  LEFT JOIN TEST_RESULT_ANSWERS_FACTS traf
    ON t.ID = traf.TEST_ID AND q.id = traf.QUESTION_ID AND traf.STUDENT_ID = 1
WHERE t.ID = 1
ORDER BY t.ID, TEST_SECTION_ID, q.id, a.id;



/* -- all questions --*/
SELECT COUNT(DISTINCT QUESTION_ID) AS QUESTIONS_COUNT FROM TEST t
  LEFT JOIN TEST_SECTION ts
    ON t.ID = ts.TEST_ID
  LEFT JOIN TEST_SECTION_QUESTION_XREF tsqx
    ON ts.ID = tsqx.TEST_SECTION_ID
  LEFT JOIN QUESTION q
    ON tsqx.QUESTION_ID = q.ID
WHERE t.ID = 1;


/* correct and answered */
SELECT SUM(IS_CORRECT) as QUESTIONS_ANSWERED_CORRECTLY_COUNT,
  COUNT(*) as QUESTIONS_ANSWERED_COUNT,
  COALESCE(MIN(DATETIME), 'N/A') as FIRST_ANSWERED_QUESTION_DATETIME,
  COALESCE(MAX(DATETIME), 'N/A') as LAST_ANSWERED_QUESTION_DATETIME
FROM TEST_RESULT_ANSWERS_FACTS
WHERE TEST_ID = 1 AND STUDENT_ID = 4;

/*DELETE FROM TEST_RESULT_ANSWERS_FACTS;*/