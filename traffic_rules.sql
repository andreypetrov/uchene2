DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS QUESTION_CATEGORY;
DROP TABLE IF EXISTS ANSWER;
DROP TABLE IF EXISTS QUESTION;
DROP TABLE IF EXISTS TEST;
DROP TABLE IF EXISTS TEST_SECTION;
DROP TABLE IF EXISTS TEST_SECTION_QUESTION_XREF;
DROP TABLE IF EXISTS TEST_RESULT;
DROP TABLE IF EXISTS TEST_RESULT_ANSWERS_FACTS;

CREATE TABLE ROLE (
  ID INTEGER PRIMARY KEY NOT NULL,
  DESCRIPTION TEXT NOT NULL
);

CREATE TABLE USER (
  ID INTEGER PRIMARY KEY NOT NULL,
  FIRST_NAME TEXT NOT NULL,
  LAST_NAME TEXT NOT NULL,
  IMAGE_URL TEXT,
  ROLE_ID INTEGER NOT NULL,
  PASSWORD TEXT,
  FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ID)
);

/*
 * Category of the question. Usually but not necessarily there will be 1 to 1 relationship between this category and a question
 */
CREATE TABLE QUESTION_CATEGORY (
  ID INTEGER PRIMARY KEY     NOT NULL,
  DESCRIPTION        TEXT    NOT NULL
);

CREATE TABLE ANSWER (
  ID INTEGER PRIMARY KEY     NOT NULL,
  DESCRIPTION        TEXT    NOT NULL,
  QUESTION_CATEGORY           INTEGER    NOT NULL,
  FOREIGN KEY(QUESTION_CATEGORY) REFERENCES QUESTION_CATEGORY(ID)
);

CREATE TABLE QUESTION (
  ID INTEGER PRIMARY KEY        NOT NULL,
  DESCRIPTION        TEXT       NOT NULL,
  QUESTION_CATEGORY    INTEGER    NOT NULL,
  CORRECT_ANSWER_ID  INTEGER    NOT NULL,
  FOREIGN KEY(QUESTION_CATEGORY) REFERENCES QUESTION_CATEGORY(ID),
  FOREIGN KEY(CORRECT_ANSWER_ID) REFERENCES ANSWER(ID)
);

/**
 * Every Test has Text sections which contain a list of questions
 */
CREATE TABLE TEST (
  ID INTEGER PRIMARY KEY NOT NULL,
  DESCRIPTION        TEXT    NOT NULL,
  TEACHER_ID INTEGER NOT NULL,
  FOREIGN KEY(TEACHER_ID) REFERENCES USER(ID)
);

CREATE TABLE TEST_SECTION (
  ID INTEGER PRIMARY KEY NOT NULL,
  DESCRIPTION        TEXT    NOT NULL,
  TEST_ID            INTEGER NOT NULL,
  FOREIGN KEY(TEST_ID) REFERENCES TEST(ID)
);

/**
 * We can have the same question in several sections, therefore we need a many to many xref table between test sections and questions
 */
CREATE TABLE TEST_SECTION_QUESTION_XREF (
  TEST_SECTION_ID INTEGER NOT NULL,
  QUESTION_ID INTEGER NOT NULL,
  FOREIGN KEY (TEST_SECTION_ID) REFERENCES TEST_SECTION(ID),
  FOREIGN KEY (QUESTION_ID) REFERENCES  QUESTION(ID)
);

/**
  Test results are user specific
  One test_result per user per test.
 */
CREATE TABLE TEST_RESULT (
  ID INTEGER PRIMARY KEY NOT NULL,
  STUDENT_ID INTEGER NOT NULL,
  TEST_ID INTEGER NOT NULL,
  DATETIME_START INTEGER NOT NULL,
  DATETIME_END INTEGER NOT NULL,
  IS_COMPLETED INTEGER NOT NULL,
  FOREIGN KEY(STUDENT_ID) REFERENCES USER(ID),
  FOREIGN KEY(TEST_ID) REFERENCES TEST(ID)
);

/* Table in which we keep the answer of every question for every test */
CREATE TABLE TEST_RESULT_ANSWERS_FACTS (
  TEST_RESULT_ID INTEGER NOT NULL,
  QUESTION_ID INTEGER NOT NULL,
  ANSWER_ID INTEGER NOT NULL,
  IS_CORRECT INTEGER NOT NULL,
  DATETIME TEXT NOT NULL,
  FOREIGN KEY (TEST_RESULT_ID) REFERENCES TEST_RESULT(ID),
  FOREIGN KEY(QUESTION_ID) REFERENCES QUESTION(ID),
  FOREIGN KEY(ANSWER_ID) REFERENCES ANSWER(ID)
);


INSERT INTO ROLE (ID, DESCRIPTION) VALUES (1, "Admin");
INSERT INTO ROLE (ID, DESCRIPTION) VALUES (2, "Teacher");
INSERT INTO ROLE (ID, DESCRIPTION) VALUES (3, "Student");

INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (1, "Andrey", "Petrov", "http://lh3.googleusercontent.com/-bjgJUDNlFhM/AAAAAAAAAAI/AAAAAAAAAAA/AKB_U8vGzayOkjkrL9TY_lHaJMz0HRBvjQ/s64-c-mo/photo.jpg", 1, "parola");
INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (2, "Aleksandar", "Petrov", NULL, 1, "parola");
INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (3, "Учителко", "Учителков", NULL, 2, "parola");
INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (4, "Йордан", "Илиев", NULL, 3, "parola");
INSERT INTO USER (ID, FIRST_NAME, LAST_NAME, IMAGE_URL, ROLE_ID, PASSWORD) VALUES (5, "Теодор", "Стаматов", NULL, 3, NULL );


INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (1, "Обща");
INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (2, "Веригата на велосипеда 1");
INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (3, "Веригата на велосипеда 2");
INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (4, "Буташ велосипед");
INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (5, "Няма тротоар или банкет. Велосипед");
INSERT INTO QUESTION_CATEGORY (ID, DESCRIPTION) VALUES (10, "ДА или НЕ");



INSERT INTO QUESTION (ID, DESCRIPTION, QUESTION_CATEGORY, CORRECT_ANSWER_ID) VALUES (1, "Веригата на велосипеда:", 2, 1);
INSERT INTO QUESTION (ID, DESCRIPTION, QUESTION_CATEGORY, CORRECT_ANSWER_ID) VALUES (2, "Веригата на велосипеда:", 3, 4);
INSERT INTO QUESTION (ID, DESCRIPTION, QUESTION_CATEGORY, CORRECT_ANSWER_ID) VALUES (3, "Когато буташ велосипед, тогава според ЗДвП, ти си:", 4, 6);
INSERT INTO QUESTION (ID, DESCRIPTION, QUESTION_CATEGORY, CORRECT_ANSWER_ID) VALUES (4, "Когато няма тротоар или банкет, или те не могат да бъдат използвани, тогава къде ще буташ велосипеда си?", 5, 7);
INSERT INTO QUESTION (ID, DESCRIPTION, QUESTION_CATEGORY, CORRECT_ANSWER_ID) VALUES (5, "Може ли една ненапомпена гума да влияе на равновесието и на безопасното управление на велосипеда?", 11, 10);
INSERT INTO QUESTION (ID, DESCRIPTION, QUESTION_CATEGORY, CORRECT_ANSWER_ID) VALUES (6, "Може ли нерегулирани добре седалка и кормило да влияят на равновесието и на безопасното управление на велосипеда?", 11, 10);
INSERT INTO QUESTION (ID, DESCRIPTION, QUESTION_CATEGORY, CORRECT_ANSWER_ID) VALUES (7, "Може ли голям товар на багажника да влияе на равновесието и на безопасното управление на велосипеда?", 11, 10);


INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (1, "трябва да се обтяга периодично", 2);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (2, "трябва да се отпуска периодично", 2);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (3, "нито се обтяга, нито се отпуска", 2);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (4, "се смазва периодично", 3);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (5, "не се смазва", 3);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (6, "велосипедист", 4);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (7, "пешеходец", 4);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (8, "По платното за движение, най-близо до дясната му граница", 5);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (9, "По платното за движение най-близо до лявата му граница", 5);

INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (11, "Да", 10);
INSERT INTO ANSWER (ID, DESCRIPTION, QUESTION_CATEGORY) VALUES (12, "Не", 10);

INSERT INTO TEST (ID, DESCRIPTION, TEACHER_ID) VALUES  (1, "Тест за движение по пътищата", 3);

INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (1, "Първа секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (2, "Втора секция", 1);
INSERT INTO TEST_SECTION (ID, DESCRIPTION, TEST_ID) VALUES (3, "Трета секция", 1);

INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 1);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (1, 2);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (2, 3);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (2, 4);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (3, 5);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (3, 6);
INSERT INTO TEST_SECTION_QUESTION_XREF (TEST_SECTION_ID, QUESTION_ID) VALUES (3, 7);




